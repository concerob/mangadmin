Index: trunk/sql/mangos.sql
===================================================================
--- trunk/sql/mangos.sql	(revision 3928)
+++ trunk/sql/mangos.sql	(working copy)
@@ -720,8 +720,7 @@
 ('gameobject',3,'Syntax: .gameobject #id <lootID> <spawntimeSecs>\r\n\r\nAdd a game object from game object templates to the world at your current location using the #id.\r\nlootID specifies the loot-template to be used and spawntimeSecs sets the spawntime, both are optional.'),
 ('getvalue',3,'Syntax: .getvalue #field #isInt\r\n\r\nGet the field #field of the selected creature. If no creature is selected, get the content of your field.\r\n\r\nUse a #isInt of value 1 if the expected field content is an integer.'),
 ('gmlist',0,'Syntax: .gmlist\r\n\r\nDisplay a list of available Game Masters.'),
-('gmoff',1,'Syntax: .gmoff\r\n\r\nDisable the <GM> prefix for your character.'),
-('gmon',1,'Syntax: .gmon\r\n\r\nEnable the <GM> prefix for your character.'),
+('togglegm',1,'Syntax: .togglegm\r\n\r\nToggle the <GM> prefix for your character.'),
 ('go',3,'Syntax: .go #position_x #position_y #position_z #mapid\r\n\r\nTeleport to the given coordinates on the specified map.'),
 ('gocreature',2,'Syntax: .gocreature #creature_guid\r\nTeleport your character to creature with guid #creature_guid.\r\n.gocreature #creature_name\r\nTeleport your character to creature with this name.\r\n.gocreature id #creature_id\r\nTeleport your character to a creature that was spawned from the template with this entry.\r\n*If* more than one creature is found, then you are teleported to the first that is found inside the database.'),
 ('goobject',1,'Syntax: .goobject #object_guid\r\nTeleport your character to gameobject with guid #object_guid'),
Index: trunk/src/game/Chat.cpp
===================================================================
--- trunk/src/game/Chat.cpp	(revision 3928)
+++ trunk/src/game/Chat.cpp	(working copy)
@@ -169,8 +169,7 @@
         { "displayid",   2, &ChatHandler::HandleDisplayIdCommand,        "",   NULL },
         { "factionid",   2, &ChatHandler::HandleFactionIdCommand,        "",   NULL },
         { "gmlist",      0, &ChatHandler::HandleGMListCommand,           "",   NULL },
-        { "gmoff",       1, &ChatHandler::HandleGMOffCommand,            "",   NULL },
-        { "gmon",        1, &ChatHandler::HandleGMOnCommand,             "",   NULL },
+        { "togglegm",    1, &ChatHandler::HandleToggleGMCommand,         "",   NULL },
         { "gps",         1, &ChatHandler::HandleGPSCommand,              "",   NULL },
         { "guid",        2, &ChatHandler::HandleGUIDCommand,             "",   NULL },
         { "help",        0, &ChatHandler::HandleHelpCommand,             "",   NULL },
Index: trunk/src/game/Chat.h
===================================================================
--- trunk/src/game/Chat.h	(revision 3928)
+++ trunk/src/game/Chat.h	(working copy)
@@ -142,8 +142,7 @@
         bool HandleRecallCommand(const char* args);
         bool HandleAnnounceCommand(const char* args);
         bool HandleNotifyCommand(const char* args);
-        bool HandleGMOnCommand(const char* args);
-        bool HandleGMOffCommand(const char* args);
+        bool HandleToggleGMCommand(const char* args);
         bool HandleVisibleCommand(const char* args);
         bool HandleGPSCommand(const char* args);
         bool HandleTaxiCheatCommand(const char* args);
Index: trunk/src/game/Level1.cpp
===================================================================
--- trunk/src/game/Level1.cpp	(revision 3928)
+++ trunk/src/game/Level1.cpp	(working copy)
@@ -126,22 +126,21 @@
     return true;
 }
 
-bool ChatHandler::HandleGMOnCommand(const char* args)
+bool ChatHandler::HandleToggleGMCommand(const char* args)
 {
-    m_session->GetPlayer()->SetGameMaster(true);
-    m_session->SendNotification("GM mode is ON");
-
+    if (!m_session->GetPlayer()->isGameMaster())
+	{
+		m_session->GetPlayer()->SetGameMaster(true);
+		m_session->SendNotification("Toggled GM mode: ON");
+	}
+	else
+	{
+		m_session->GetPlayer()->SetGameMaster(false);
+		m_session->SendNotification("Toggled GM mode: OFF");
+	}
     return true;
 }
 
-bool ChatHandler::HandleGMOffCommand(const char* args)
-{
-    m_session->GetPlayer()->SetGameMaster(false);
-    m_session->SendNotification("GM mode is OFF");
-
-    return true;
-}
-
 bool ChatHandler::HandleVisibleCommand(const char* args)
 {
     int option = atoi((char*)args);
